# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # Étape 1 : Récupérer le code
    - name: Checkout code
      uses: actions/checkout@v3

    # Étape 2 : Configurer Docker
    - name: Set up Docker
      uses: docker/setup-buildx-action@v2

    # Étape 3 : Construire l'image Docker
    - name: Build Docker image
      run: |
        docker build -t collecte:${{ github.sha }} .

    # Étape 4 : Archiver l'image Docker
    - name: Save Docker image as tar
      run: |
        docker save collecte:${{ github.sha }} -o collecte.tar

    - name: Verify file existence
      run: ls -l /tmp/collecte.tar

    # Étape 5 : Transférer l'image Docker sur le VPS
    - name: Upload Docker image to VPS
      uses: appleboy/scp-action@v0.1.5
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        password: ${{ secrets.SERVER_PASSWORD }}
        source: /tmp/collecte.tar
        target: /home/${{ secrets.SERVER_USERNAME }}/collecte.tar
        tar_exec: false

    # Étape 6 : Charger et exécuter l'image sur le VPS
    - name: Deploy on VPS
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        password: ${{ secrets.SERVER_PASSWORD }}
        script: |
          docker load -i /home/${{ secrets.SERVER_USER }}/collecte.tar
          rm -f /home/${{ secrets.SERVER_USER }}/collecte.tar
          docker stop collecte || true
          docker rm collecte || true
          docker image prune -f || true
          docker run -d --name collecte -p 5000:5000 collecte:${{ github.sha }}
