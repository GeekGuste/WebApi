# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore

    - name: Test
      run: dotnet test --no-build --verbosity normal

    - name: Package application
      run: |
        dotnet publish -c Release -o ./out

    - name: Deploy application to server
      env:
        SERVER_HOST: ${{ secrets.SERVER_HOST }}
        SERVER_USER: ${{ secrets.SERVER_USER }}
        SERVER_PASSWORD: ${{ secrets.SERVER_PASSWORD }}
      run: |
        # Copier les fichiers publiés sur le serveur
        sshpass -p "${SERVER_PASSWORD}" scp -o StrictHostKeyChecking=no -r ./out/* ${SERVER_USER}@${SERVER_HOST}:/

        # Se connecter au serveur pour effectuer le déploiement
        sshpass -p "${SERVER_PASSWORD}" ssh -o StrictHostKeyChecking=no ${SERVER_USER}@${SERVER_HOST} << EOF
          # Naviguer dans le dossier de l'application
          cd /
          
          # Exécuter des commandes spécifiques au déploiement
          # Par exemple : redémarrer un service
          # systemctl restart your-service-name

          echo "Déploiement terminé avec succès."
        EOF
